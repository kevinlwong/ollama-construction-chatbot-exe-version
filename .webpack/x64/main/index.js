(()=>{"use strict";var e={157:e=>{e.exports=require("electron")},317:e=>{e.exports=require("child_process")},928:e=>{e.exports=require("path")}},o={};function r(t){var n=o[t];if(void 0!==n)return n.exports;var s=o[t]={exports:{}};return e[t](s,s.exports,r),s.exports}const{app:t,BrowserWindow:n,ipcMain:s}=r(157),{spawn:i}=r(317),a=r(928),l=a.join(process.resourcesPath,"resources","ollama.exe");let c;t.whenReady().then((()=>{console.log("Launching Electron App...");const e=i(l,["serve"],{cwd:a.dirname(l),detached:!0,stdio:"ignore"});e.on("error",(e=>{console.error("Failed to start Ollama:",e)})),c=new n({width:1e3,height:800,webPreferences:{nodeIntegration:!0,contextIsolation:!1}});const o=`file://${a.join(__dirname,"dist","index.html")}`;c.loadURL(o),t.on("window-all-closed",(()=>{e.kill(),t.quit()}))})),s.handle("ollama-request",(async(e,{model:o,prompt:r})=>new Promise(((e,t)=>{const n=i(l,["run",o,r]);let s="";n.stdout.on("data",(e=>{s+=e.toString()})),n.on("close",(()=>e(s))),n.on("error",(e=>t(e)))})))),module.exports={}})();
//# sourceMappingURL=index.js.map