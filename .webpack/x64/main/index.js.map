{"version":3,"file":"index.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,W,UCAzBF,EAAOC,QAAUC,QAAQ,gB,UCAzBF,EAAOC,QAAUC,QAAQ,O,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,CCtBA,MAAM,IAAEQ,EAAG,cAAEC,EAAa,QAAEC,GAAYT,EAAQ,MAC1C,MAAEU,GAAUV,EAAQ,KACpBW,EAAOX,EAAQ,KAIfY,EAEFD,EAAKE,KAAKC,QAAQC,cAAe,YAAa,cAElD,IAAIC,EAEJT,EAAIU,YAAYC,MAAK,KACnBC,QAAQC,IAAI,6BAEZ,MAAMC,EAAgBX,EAAME,EAAY,CAAC,SAAU,CACjDU,IAAKX,EAAKY,QAAQX,GAClBY,UAAU,EACVC,MAAO,WAGTJ,EAAcK,GAAG,SAAUC,IACzBR,QAAQS,MAAM,0BAA2BD,EAAI,IAG/CX,EAAa,IAAIR,EAAc,CAC7BqB,MAAO,IACPC,OAAQ,IACRC,eAAgB,CACdC,iBAAiB,EACjBC,kBAAkB,KAItB,MAAMC,EAEF,UAAUvB,EAAKE,KAAKsB,UAAW,OAAQ,gBAE3CnB,EAAWoB,QAAQF,GAEnB3B,EAAImB,GAAG,qBAAqB,KAC1BL,EAAcgB,OACd9B,EAAI+B,MAAM,GACV,IAIJ7B,EAAQ8B,OAAO,kBAAkBC,MAAOC,GAASC,QAAOC,YAC/C,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAASrC,EAAME,EAAY,CAAC,MAAO8B,EAAOC,IAEhD,IAAIK,EAAW,GACfD,EAAOE,OAAOvB,GAAG,QAASwB,IACxBF,GAAYE,EAAKC,UAAU,IAG7BJ,EAAOrB,GAAG,SAAS,IAAMmB,EAAQG,KACjCD,EAAOrB,GAAG,SAAUC,GAAQmB,EAAOnB,IAAK,M","sources":["webpack://ollama-chatbot-vite/external node-commonjs \"electron\"","webpack://ollama-chatbot-vite/external node-commonjs \"child_process\"","webpack://ollama-chatbot-vite/external node-commonjs \"path\"","webpack://ollama-chatbot-vite/webpack/bootstrap","webpack://ollama-chatbot-vite/./electron.js"],"sourcesContent":["module.exports = require(\"electron\");","module.exports = require(\"child_process\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const { app, BrowserWindow, ipcMain } = require(\"electron\");\r\nconst { spawn } = require(\"child_process\");\r\nconst path = require(\"path\");\r\n\r\nconst isDev = process.env.NODE_ENV === \"development\";\r\n\r\nconst ollamaPath = isDev\r\n  ? path.join(__dirname, \"resources\", \"ollama.exe\") // Dev Mode\r\n  : path.join(process.resourcesPath, \"resources\", \"ollama.exe\"); // Prod Mode\r\n\r\nlet mainWindow;\r\n\r\napp.whenReady().then(() => {\r\n  console.log(\"Launching Electron App...\");\r\n  \r\n  const ollamaProcess = spawn(ollamaPath, [\"serve\"], {\r\n    cwd: path.dirname(ollamaPath),\r\n    detached: true,\r\n    stdio: \"ignore\",\r\n  });\r\n\r\n  ollamaProcess.on(\"error\", (err) => {\r\n    console.error(\"Failed to start Ollama:\", err);\r\n  });\r\n\r\n  mainWindow = new BrowserWindow({\r\n    width: 1000,\r\n    height: 800,\r\n    webPreferences: {\r\n      nodeIntegration: true,\r\n      contextIsolation: false, // Required for Electron-Renderer communication\r\n    },\r\n  });\r\n\r\n  const startURL = isDev\r\n    ? \"http://localhost:5173\"\r\n    : `file://${path.join(__dirname, \"dist\", \"index.html\")}`;\r\n\r\n  mainWindow.loadURL(startURL);\r\n\r\n  app.on(\"window-all-closed\", () => {\r\n    ollamaProcess.kill();\r\n    app.quit();\r\n  });\r\n});\r\n\r\n// Handle Chatbot Messages\r\nipcMain.handle(\"ollama-request\", async (event, { model, prompt }) => {\r\n  return new Promise((resolve, reject) => {\r\n    const ollama = spawn(ollamaPath, [\"run\", model, prompt]);\r\n\r\n    let response = \"\";\r\n    ollama.stdout.on(\"data\", (data) => {\r\n      response += data.toString();\r\n    });\r\n\r\n    ollama.on(\"close\", () => resolve(response));\r\n    ollama.on(\"error\", (err) => reject(err));\r\n  });\r\n});\r\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","app","BrowserWindow","ipcMain","spawn","path","ollamaPath","join","process","resourcesPath","mainWindow","whenReady","then","console","log","ollamaProcess","cwd","dirname","detached","stdio","on","err","error","width","height","webPreferences","nodeIntegration","contextIsolation","startURL","__dirname","loadURL","kill","quit","handle","async","event","model","prompt","Promise","resolve","reject","ollama","response","stdout","data","toString"],"sourceRoot":""}